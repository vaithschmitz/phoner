{"id":"node_modules/libphonenumber-js/es6/validate_.js","dependencies":[{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/validate_.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/vaithschmitz/Desktop/phoner/package.json","includedInParent":true,"mtime":1576488072191},{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/package.json","includedInParent":true,"mtime":1576491938077},{"name":"./metadata","loc":{"line":1,"column":21},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/validate_.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/metadata.js"},{"name":"./util","loc":{"line":2,"column":32},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/validate_.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/util.js"},{"name":"./getNumberType_","loc":{"line":3,"column":26},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/validate_.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/getNumberType_.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidNumber;\n\nvar _metadata = _interopRequireDefault(require(\"./metadata\"));\n\nvar _util = require(\"./util\");\n\nvar _getNumberType_ = _interopRequireDefault(require(\"./getNumberType_\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\nfunction isValidNumber(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var metadata = arguments[2];\n  metadata = new _metadata.default(metadata); // This is just to support `isValidNumber({})`\n  // for cases when `parseNumber()` returns `{}`.\n\n  if (!input.country) {\n    return false;\n  }\n\n  if (!metadata.hasCountry(input.country)) {\n    throw new Error('Unknown country: ' + input.country);\n  }\n\n  metadata.country(input.country); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return (0, _getNumberType_.default)(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var national_number = options.v2 ? input.nationalNumber : input.phone;\n  return (0, _util.matchesEntirely)(national_number, metadata.nationalNumberPattern());\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../source/validate_.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":5,"column":0},"generated":{"line":16,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":34,"column":15},"generated":{"line":45,"column":0}},{"source":"../source/validate_.js","name":"isValidNumber","original":{"line":34,"column":24},"generated":{"line":45,"column":9}},{"source":"../source/validate_.js","name":null,"original":{"line":34,"column":15},"generated":{"line":45,"column":22}},{"source":"../source/validate_.js","name":"input","original":{"line":34,"column":38},"generated":{"line":45,"column":23}},{"source":"../source/validate_.js","name":null,"original":{"line":34,"column":15},"generated":{"line":45,"column":28}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":45,"column":30}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":0}},{"source":"../source/validate_.js","name":"options","original":{"line":34,"column":45},"generated":{"line":46,"column":6}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":13}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":16}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":25}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":26}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":32}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":35}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":36}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":40}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":49}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":50}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":51}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":52}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":57}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":66}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":69}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":78}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":79}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":80}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":81}},{"source":"../source/validate_.js","name":null,"original":{"line":34,"column":55},"generated":{"line":46,"column":84}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":46,"column":86}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":0}},{"source":"../source/validate_.js","name":"metadata","original":{"line":34,"column":59},"generated":{"line":47,"column":6}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":14}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":17}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":26}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":27}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":28}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":47,"column":29}},{"source":"../source/validate_.js","name":"metadata","original":{"line":36,"column":1},"generated":{"line":48,"column":0}},{"source":"../source/validate_.js","name":"metadata","original":{"line":36,"column":1},"generated":{"line":48,"column":2}},{"source":"../source/validate_.js","name":"metadata","original":{"line":36,"column":1},"generated":{"line":48,"column":10}},{"source":"../source/validate_.js","name":null,"original":{"line":36,"column":12},"generated":{"line":48,"column":13}},{"source":"../source/validate_.js","name":"Metadata","original":{"line":36,"column":16},"generated":{"line":48,"column":17}},{"source":"../source/validate_.js","name":null,"original":{"line":36,"column":12},"generated":{"line":48,"column":34}},{"source":"../source/validate_.js","name":"metadata","original":{"line":36,"column":25},"generated":{"line":48,"column":35}},{"source":"../source/validate_.js","name":null,"original":{"line":36,"column":12},"generated":{"line":48,"column":43}},{"source":"../source/validate_.js","name":"metadata","original":{"line":36,"column":1},"generated":{"line":48,"column":44}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":48,"column":45}},{"source":"../source/validate_.js","name":null,"original":{"line":38,"column":1},"generated":{"line":48,"column":46}},{"source":"../source/validate_.js","name":null,"original":{"line":39,"column":1},"generated":{"line":49,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":40,"column":1},"generated":{"line":51,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":40,"column":5},"generated":{"line":51,"column":6}},{"source":"../source/validate_.js","name":"input","original":{"line":40,"column":6},"generated":{"line":51,"column":7}},{"source":"../source/validate_.js","name":"input","original":{"line":40,"column":6},"generated":{"line":51,"column":12}},{"source":"../source/validate_.js","name":"country","original":{"line":40,"column":12},"generated":{"line":51,"column":13}},{"source":"../source/validate_.js","name":null,"original":{"line":40,"column":1},"generated":{"line":51,"column":20}},{"source":"../source/validate_.js","name":null,"original":{"line":41,"column":1},"generated":{"line":51,"column":22}},{"source":"../source/validate_.js","name":null,"original":{"line":42,"column":2},"generated":{"line":52,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":42,"column":9},"generated":{"line":52,"column":11}},{"source":"../source/validate_.js","name":null,"original":{"line":42,"column":2},"generated":{"line":52,"column":16}},{"source":"../source/validate_.js","name":null,"original":{"line":43,"column":2},"generated":{"line":53,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":45,"column":1},"generated":{"line":55,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":45,"column":5},"generated":{"line":55,"column":6}},{"source":"../source/validate_.js","name":"metadata","original":{"line":45,"column":6},"generated":{"line":55,"column":7}},{"source":"../source/validate_.js","name":"metadata","original":{"line":45,"column":6},"generated":{"line":55,"column":15}},{"source":"../source/validate_.js","name":"hasCountry","original":{"line":45,"column":15},"generated":{"line":55,"column":16}},{"source":"../source/validate_.js","name":"metadata","original":{"line":45,"column":6},"generated":{"line":55,"column":26}},{"source":"../source/validate_.js","name":"input","original":{"line":45,"column":26},"generated":{"line":55,"column":27}},{"source":"../source/validate_.js","name":"input","original":{"line":45,"column":26},"generated":{"line":55,"column":32}},{"source":"../source/validate_.js","name":"country","original":{"line":45,"column":32},"generated":{"line":55,"column":33}},{"source":"../source/validate_.js","name":"metadata","original":{"line":45,"column":6},"generated":{"line":55,"column":40}},{"source":"../source/validate_.js","name":null,"original":{"line":45,"column":1},"generated":{"line":55,"column":41}},{"source":"../source/validate_.js","name":null,"original":{"line":46,"column":1},"generated":{"line":55,"column":43}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":2},"generated":{"line":56,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":8},"generated":{"line":56,"column":10}},{"source":"../source/validate_.js","name":"Error","original":{"line":47,"column":12},"generated":{"line":56,"column":14}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":8},"generated":{"line":56,"column":19}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":8},"generated":{"line":56,"column":20}},{"source":"../source/validate_.js","name":"input","original":{"line":47,"column":38},"generated":{"line":56,"column":42}},{"source":"../source/validate_.js","name":"input","original":{"line":47,"column":38},"generated":{"line":56,"column":47}},{"source":"../source/validate_.js","name":"country","original":{"line":47,"column":44},"generated":{"line":56,"column":48}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":8},"generated":{"line":56,"column":55}},{"source":"../source/validate_.js","name":null,"original":{"line":47,"column":2},"generated":{"line":56,"column":56}},{"source":"../source/validate_.js","name":null,"original":{"line":48,"column":2},"generated":{"line":57,"column":0}},{"source":"../source/validate_.js","name":"metadata","original":{"line":50,"column":1},"generated":{"line":59,"column":0}},{"source":"../source/validate_.js","name":"metadata","original":{"line":50,"column":1},"generated":{"line":59,"column":2}},{"source":"../source/validate_.js","name":"metadata","original":{"line":50,"column":1},"generated":{"line":59,"column":10}},{"source":"../source/validate_.js","name":"country","original":{"line":50,"column":10},"generated":{"line":59,"column":11}},{"source":"../source/validate_.js","name":"metadata","original":{"line":50,"column":1},"generated":{"line":59,"column":18}},{"source":"../source/validate_.js","name":"input","original":{"line":50,"column":18},"generated":{"line":59,"column":19}},{"source":"../source/validate_.js","name":"input","original":{"line":50,"column":18},"generated":{"line":59,"column":24}},{"source":"../source/validate_.js","name":"country","original":{"line":50,"column":24},"generated":{"line":59,"column":25}},{"source":"../source/validate_.js","name":"metadata","original":{"line":50,"column":1},"generated":{"line":59,"column":32}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":59,"column":34}},{"source":"../source/validate_.js","name":null,"original":{"line":52,"column":1},"generated":{"line":59,"column":35}},{"source":"../source/validate_.js","name":null,"original":{"line":53,"column":1},"generated":{"line":60,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":54,"column":1},"generated":{"line":62,"column":0}},{"source":"../source/validate_.js","name":"metadata","original":{"line":54,"column":5},"generated":{"line":62,"column":6}},{"source":"../source/validate_.js","name":"metadata","original":{"line":54,"column":5},"generated":{"line":62,"column":14}},{"source":"../source/validate_.js","name":"hasTypes","original":{"line":54,"column":14},"generated":{"line":62,"column":15}},{"source":"../source/validate_.js","name":"metadata","original":{"line":54,"column":5},"generated":{"line":62,"column":23}},{"source":"../source/validate_.js","name":null,"original":{"line":54,"column":1},"generated":{"line":62,"column":25}},{"source":"../source/validate_.js","name":null,"original":{"line":55,"column":1},"generated":{"line":62,"column":27}},{"source":"../source/validate_.js","name":null,"original":{"line":56,"column":2},"generated":{"line":63,"column":0}},{"source":"../source/validate_.js","name":"getNumberType","original":{"line":56,"column":9},"generated":{"line":63,"column":11}},{"source":"../source/validate_.js","name":"input","original":{"line":56,"column":23},"generated":{"line":63,"column":40}},{"source":"../source/validate_.js","name":"getNumberType","original":{"line":56,"column":9},"generated":{"line":63,"column":45}},{"source":"../source/validate_.js","name":"options","original":{"line":56,"column":30},"generated":{"line":63,"column":47}},{"source":"../source/validate_.js","name":"getNumberType","original":{"line":56,"column":9},"generated":{"line":63,"column":54}},{"source":"../source/validate_.js","name":"metadata","original":{"line":56,"column":39},"generated":{"line":63,"column":56}},{"source":"../source/validate_.js","name":"metadata","original":{"line":56,"column":39},"generated":{"line":63,"column":64}},{"source":"../source/validate_.js","name":"metadata","original":{"line":56,"column":48},"generated":{"line":63,"column":65}},{"source":"../source/validate_.js","name":"getNumberType","original":{"line":56,"column":9},"generated":{"line":63,"column":73}},{"source":"../source/validate_.js","name":"undefined","original":{"line":56,"column":62},"generated":{"line":63,"column":79}},{"source":"../source/validate_.js","name":null,"original":{"line":56,"column":2},"generated":{"line":63,"column":88}},{"source":"../source/validate_.js","name":null,"original":{"line":57,"column":2},"generated":{"line":64,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":35,"column":0},"generated":{"line":64,"column":3}},{"source":"../source/validate_.js","name":null,"original":{"line":59,"column":1},"generated":{"line":64,"column":4}},{"source":"../source/validate_.js","name":null,"original":{"line":60,"column":1},"generated":{"line":65,"column":0}},{"source":"../source/validate_.js","name":null,"original":{"line":61,"column":1},"generated":{"line":68,"column":0}},{"source":"../source/validate_.js","name":"national_number","original":{"line":61,"column":7},"generated":{"line":68,"column":6}},{"source":"../source/validate_.js","name":"national_number","original":{"line":61,"column":7},"generated":{"line":68,"column":21}},{"source":"../source/validate_.js","name":"options","original":{"line":61,"column":25},"generated":{"line":68,"column":24}},{"source":"../source/validate_.js","name":"options","original":{"line":61,"column":25},"generated":{"line":68,"column":31}},{"source":"../source/validate_.js","name":"v2","original":{"line":61,"column":33},"generated":{"line":68,"column":32}},{"source":"../source/validate_.js","name":"options","original":{"line":61,"column":25},"generated":{"line":68,"column":34}},{"source":"../source/validate_.js","name":"input","original":{"line":61,"column":38},"generated":{"line":68,"column":37}},{"source":"../source/validate_.js","name":"input","original":{"line":61,"column":38},"generated":{"line":68,"column":42}},{"source":"../source/validate_.js","name":"nationalNumber","original":{"line":61,"column":44},"generated":{"line":68,"column":43}},{"source":"../source/validate_.js","name":"options","original":{"line":61,"column":25},"generated":{"line":68,"column":57}},{"source":"../source/validate_.js","name":"input","original":{"line":61,"column":61},"generated":{"line":68,"column":60}},{"source":"../source/validate_.js","name":"input","original":{"line":61,"column":61},"generated":{"line":68,"column":65}},{"source":"../source/validate_.js","name":"phone","original":{"line":61,"column":67},"generated":{"line":68,"column":66}},{"source":"../source/validate_.js","name":null,"original":{"line":61,"column":1},"generated":{"line":68,"column":71}},{"source":"../source/validate_.js","name":null,"original":{"line":62,"column":1},"generated":{"line":69,"column":0}},{"source":"../source/validate_.js","name":"matchesEntirely","original":{"line":62,"column":8},"generated":{"line":69,"column":9}},{"source":"../source/validate_.js","name":"national_number","original":{"line":62,"column":24},"generated":{"line":69,"column":36}},{"source":"../source/validate_.js","name":"matchesEntirely","original":{"line":62,"column":8},"generated":{"line":69,"column":51}},{"source":"../source/validate_.js","name":"metadata","original":{"line":62,"column":41},"generated":{"line":69,"column":53}},{"source":"../source/validate_.js","name":"metadata","original":{"line":62,"column":41},"generated":{"line":69,"column":61}},{"source":"../source/validate_.js","name":"nationalNumberPattern","original":{"line":62,"column":50},"generated":{"line":69,"column":62}},{"source":"../source/validate_.js","name":"metadata","original":{"line":62,"column":41},"generated":{"line":69,"column":83}},{"source":"../source/validate_.js","name":"matchesEntirely","original":{"line":62,"column":8},"generated":{"line":69,"column":85}},{"source":"../source/validate_.js","name":null,"original":{"line":62,"column":1},"generated":{"line":69,"column":86}},{"source":"../source/validate_.js","name":null,"original":{"line":63,"column":1},"generated":{"line":70,"column":0}}],"sources":{"../source/validate_.js":"import Metadata from './metadata'\r\nimport { matchesEntirely } from './util'\r\nimport getNumberType from './getNumberType_'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options = {}, metadata)\r\n{\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// This is just to support `isValidNumber({})`\r\n\t// for cases when `parseNumber()` returns `{}`.\r\n\tif (!input.country)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tif (!metadata.hasCountry(input.country))\r\n\t{\r\n\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t}\r\n\r\n\tmetadata.country(input.country)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes())\r\n\t{\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst national_number = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(national_number, metadata.nationalNumberPattern())\r\n}"},"lineCount":null}},"error":null,"hash":"347fecb8d1cee8c5657b08752309ae7b","cacheData":{"env":{}}}