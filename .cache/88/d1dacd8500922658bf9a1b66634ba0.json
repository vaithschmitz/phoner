{"id":"node_modules/libphonenumber-js/es6/formatIncompletePhoneNumber.js","dependencies":[{"name":"/Users/vaith/Desktop/phoner/node_modules/libphonenumber-js/es6/formatIncompletePhoneNumber.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/vaith/Desktop/phoner/package.json","includedInParent":true,"mtime":1576059360169},{"name":"/Users/vaith/Desktop/phoner/node_modules/libphonenumber-js/package.json","includedInParent":true,"mtime":1574443680780},{"name":"./AsYouType","loc":{"line":1,"column":22},"parent":"/Users/vaith/Desktop/phoner/node_modules/libphonenumber-js/es6/formatIncompletePhoneNumber.js","resolved":"/Users/vaith/Desktop/phoner/node_modules/libphonenumber-js/es6/AsYouType.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatIncompletePhoneNumber;\n\nvar _AsYouType = _interopRequireDefault(require(\"./AsYouType\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {string} Formatted (possibly incomplete) phone number.\r\n */\nfunction formatIncompletePhoneNumber(value, country, metadata) {\n  if (!metadata) {\n    metadata = country;\n    country = undefined;\n  }\n\n  return new _AsYouType.default(country, metadata).input(value);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":"formatIncompletePhoneNumber","original":{"line":11,"column":24},"generated":{"line":20,"column":9}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":36}},{"source":"../source/formatIncompletePhoneNumber.js","name":"value","original":{"line":11,"column":52},"generated":{"line":20,"column":37}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":42}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":11,"column":59},"generated":{"line":20,"column":44}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":51}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":11,"column":68},"generated":{"line":20,"column":53}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":11,"column":15},"generated":{"line":20,"column":61}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":12,"column":0},"generated":{"line":20,"column":63}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":13,"column":1},"generated":{"line":21,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":13,"column":5},"generated":{"line":21,"column":6}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":13,"column":6},"generated":{"line":21,"column":7}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":13,"column":1},"generated":{"line":21,"column":15}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":13,"column":16},"generated":{"line":21,"column":17}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":14,"column":2},"generated":{"line":22,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":14,"column":2},"generated":{"line":22,"column":4}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":14,"column":2},"generated":{"line":22,"column":12}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":14,"column":13},"generated":{"line":22,"column":15}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":14,"column":2},"generated":{"line":22,"column":22}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":15,"column":2},"generated":{"line":23,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":15,"column":2},"generated":{"line":23,"column":4}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":15,"column":2},"generated":{"line":23,"column":11}},{"source":"../source/formatIncompletePhoneNumber.js","name":"undefined","original":{"line":15,"column":12},"generated":{"line":23,"column":14}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":15,"column":2},"generated":{"line":23,"column":23}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":16,"column":2},"generated":{"line":24,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":1},"generated":{"line":26,"column":0}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":9}},{"source":"../source/formatIncompletePhoneNumber.js","name":"AsYouType","original":{"line":17,"column":12},"generated":{"line":26,"column":13}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":31}},{"source":"../source/formatIncompletePhoneNumber.js","name":"country","original":{"line":17,"column":22},"generated":{"line":26,"column":32}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":39}},{"source":"../source/formatIncompletePhoneNumber.js","name":"metadata","original":{"line":17,"column":31},"generated":{"line":26,"column":41}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":49}},{"source":"../source/formatIncompletePhoneNumber.js","name":"input","original":{"line":17,"column":41},"generated":{"line":26,"column":51}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":56}},{"source":"../source/formatIncompletePhoneNumber.js","name":"value","original":{"line":17,"column":47},"generated":{"line":26,"column":57}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":8},"generated":{"line":26,"column":62}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":17,"column":1},"generated":{"line":26,"column":63}},{"source":"../source/formatIncompletePhoneNumber.js","name":null,"original":{"line":18,"column":1},"generated":{"line":27,"column":0}}],"sources":{"../source/formatIncompletePhoneNumber.js":"import AsYouType from './AsYouType'\r\n\r\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {string} Formatted (possibly incomplete) phone number.\r\n */\r\nexport default function formatIncompletePhoneNumber(value, country, metadata)\r\n{\r\n\tif (!metadata) {\r\n\t\tmetadata = country\r\n\t\tcountry = undefined\r\n\t}\r\n\treturn new AsYouType(country, metadata).input(value)\r\n}"},"lineCount":null}},"error":null,"hash":"03a1be416a979da4da2fe676d85caccb","cacheData":{"env":{}}}