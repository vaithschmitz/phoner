{"id":"node_modules/libphonenumber-js/es6/extension.js","dependencies":[{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/extension.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/vaithschmitz/Desktop/phoner/package.json","includedInParent":true,"mtime":1576488072191},{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/package.json","includedInParent":true,"mtime":1576491938077},{"name":"./constants","loc":{"line":1,"column":29},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/extension.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/constants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractExtension = extractExtension;\nexports.EXTN_PATTERNS_FOR_MATCHING = exports.EXTN_PATTERNS_FOR_PARSING = void 0;\n\nvar _constants = require(\"./constants\");\n\n// The RFC 3966 format for extensions.\nvar RFC3966_EXTN_PREFIX = ';ext='; // Pattern to capture digits used in an extension.\n// Places a maximum length of '7' for an extension.\n\nvar CAPTURING_EXTN_DIGITS = '([' + _constants.VALID_DIGITS + ']{1,7})';\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\n\nfunction create_extension_pattern(purpose) {\n  // One-character symbols that can be used to indicate an extension.\n  var single_extension_characters = 'x\\uFF58#\\uFF03~\\uFF5E';\n\n  switch (purpose) {\n    // For parsing, we are slightly more lenient in our interpretation than for matching. Here we\n    // allow \"comma\" and \"semicolon\" as possible extension indicators. When matching, these are\n    case 'parsing':\n      single_extension_characters = ',;' + single_extension_characters;\n  }\n\n  return RFC3966_EXTN_PREFIX + CAPTURING_EXTN_DIGITS + '|' + '[ \\xA0\\\\t,]*' + '(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|' + // \"доб.\"\n  '\\u0434\\u043E\\u0431|' + '[' + single_extension_characters + ']|int|anexo|\\uFF49\\uFF4E\\uFF54)' + '[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*' + CAPTURING_EXTN_DIGITS + '#?|' + '[- ]+([' + _constants.VALID_DIGITS + ']{1,5})#';\n}\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\n\n\nvar EXTN_PATTERNS_FOR_PARSING = create_extension_pattern('parsing');\nexports.EXTN_PATTERNS_FOR_PARSING = EXTN_PATTERNS_FOR_PARSING;\nvar EXTN_PATTERNS_FOR_MATCHING = create_extension_pattern('matching'); // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nexports.EXTN_PATTERNS_FOR_MATCHING = EXTN_PATTERNS_FOR_MATCHING;\nvar EXTN_PATTERN = new RegExp('(?:' + EXTN_PATTERNS_FOR_PARSING + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nfunction extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var number_without_extension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i] != null && matches[i].length > 0) {\n      return {\n        number: number_without_extension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../source/extension.js","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":3,"column":0},"generated":{"line":11,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":4,"column":6},"generated":{"line":12,"column":4}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":4,"column":6},"generated":{"line":12,"column":23}},{"source":"../source/extension.js","name":null,"original":{"line":4,"column":28},"generated":{"line":12,"column":26}},{"source":"../source/extension.js","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":33}},{"source":"../source/extension.js","name":null,"original":{"line":6,"column":0},"generated":{"line":12,"column":35}},{"source":"../source/extension.js","name":null,"original":{"line":7,"column":0},"generated":{"line":13,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":8,"column":0},"generated":{"line":15,"column":0}},{"source":"../source/extension.js","name":"CAPTURING_EXTN_DIGITS","original":{"line":8,"column":6},"generated":{"line":15,"column":4}},{"source":"../source/extension.js","name":"CAPTURING_EXTN_DIGITS","original":{"line":8,"column":6},"generated":{"line":15,"column":25}},{"source":"../source/extension.js","name":null,"original":{"line":8,"column":30},"generated":{"line":15,"column":28}},{"source":"../source/extension.js","name":"VALID_DIGITS","original":{"line":8,"column":37},"generated":{"line":15,"column":35}},{"source":"../source/extension.js","name":null,"original":{"line":8,"column":30},"generated":{"line":15,"column":58}},{"source":"../source/extension.js","name":null,"original":{"line":8,"column":52},"generated":{"line":15,"column":61}},{"source":"../source/extension.js","name":null,"original":{"line":8,"column":0},"generated":{"line":15,"column":70}},{"source":"../source/extension.js","name":null,"original":{"line":10,"column":0},"generated":{"line":16,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":25,"column":0},"generated":{"line":32,"column":0}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":25,"column":9},"generated":{"line":32,"column":9}},{"source":"../source/extension.js","name":null,"original":{"line":25,"column":0},"generated":{"line":32,"column":33}},{"source":"../source/extension.js","name":"purpose","original":{"line":25,"column":34},"generated":{"line":32,"column":34}},{"source":"../source/extension.js","name":null,"original":{"line":25,"column":0},"generated":{"line":32,"column":41}},{"source":"../source/extension.js","name":null,"original":{"line":26,"column":0},"generated":{"line":32,"column":43}},{"source":"../source/extension.js","name":null,"original":{"line":27,"column":1},"generated":{"line":33,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":28,"column":1},"generated":{"line":34,"column":0}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":28,"column":5},"generated":{"line":34,"column":6}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":28,"column":5},"generated":{"line":34,"column":33}},{"source":"../source/extension.js","name":null,"original":{"line":28,"column":35},"generated":{"line":34,"column":36}},{"source":"../source/extension.js","name":null,"original":{"line":28,"column":1},"generated":{"line":34,"column":59}},{"source":"../source/extension.js","name":null,"original":{"line":30,"column":1},"generated":{"line":36,"column":0}},{"source":"../source/extension.js","name":"purpose","original":{"line":30,"column":9},"generated":{"line":36,"column":10}},{"source":"../source/extension.js","name":null,"original":{"line":30,"column":1},"generated":{"line":36,"column":17}},{"source":"../source/extension.js","name":null,"original":{"line":32,"column":2},"generated":{"line":37,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":33,"column":2},"generated":{"line":38,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":34,"column":7},"generated":{"line":39,"column":9}},{"source":"../source/extension.js","name":null,"original":{"line":34,"column":2},"generated":{"line":39,"column":18}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":35,"column":3},"generated":{"line":40,"column":0}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":35,"column":3},"generated":{"line":40,"column":6}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":35,"column":3},"generated":{"line":40,"column":33}},{"source":"../source/extension.js","name":null,"original":{"line":35,"column":33},"generated":{"line":40,"column":36}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":35,"column":40},"generated":{"line":40,"column":43}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":35,"column":3},"generated":{"line":40,"column":70}},{"source":"../source/extension.js","name":null,"original":{"line":30,"column":1},"generated":{"line":41,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":38,"column":1},"generated":{"line":43,"column":0}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":9}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":28}},{"source":"../source/extension.js","name":"CAPTURING_EXTN_DIGITS","original":{"line":39,"column":2},"generated":{"line":43,"column":31}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":52}},{"source":"../source/extension.js","name":null,"original":{"line":39,"column":26},"generated":{"line":43,"column":55}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":58}},{"source":"../source/extension.js","name":null,"original":{"line":40,"column":2},"generated":{"line":43,"column":61}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":75}},{"source":"../source/extension.js","name":null,"original":{"line":41,"column":2},"generated":{"line":43,"column":78}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":43,"column":143}},{"source":"../source/extension.js","name":null,"original":{"line":42,"column":2},"generated":{"line":43,"column":146}},{"source":"../source/extension.js","name":null,"original":{"line":43,"column":2},"generated":{"line":44,"column":0}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":23}},{"source":"../source/extension.js","name":null,"original":{"line":44,"column":2},"generated":{"line":44,"column":26}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":29}},{"source":"../source/extension.js","name":"single_extension_characters","original":{"line":44,"column":8},"generated":{"line":44,"column":32}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":59}},{"source":"../source/extension.js","name":null,"original":{"line":44,"column":38},"generated":{"line":44,"column":62}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":95}},{"source":"../source/extension.js","name":null,"original":{"line":45,"column":2},"generated":{"line":44,"column":98}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":126}},{"source":"../source/extension.js","name":"CAPTURING_EXTN_DIGITS","original":{"line":46,"column":2},"generated":{"line":44,"column":129}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":150}},{"source":"../source/extension.js","name":null,"original":{"line":46,"column":26},"generated":{"line":44,"column":153}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":158}},{"source":"../source/extension.js","name":null,"original":{"line":47,"column":2},"generated":{"line":44,"column":161}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":170}},{"source":"../source/extension.js","name":"VALID_DIGITS","original":{"line":47,"column":14},"generated":{"line":44,"column":173}},{"source":"../source/extension.js","name":"RFC3966_EXTN_PREFIX","original":{"line":38,"column":8},"generated":{"line":44,"column":196}},{"source":"../source/extension.js","name":null,"original":{"line":47,"column":29},"generated":{"line":44,"column":199}},{"source":"../source/extension.js","name":null,"original":{"line":38,"column":1},"generated":{"line":44,"column":209}},{"source":"../source/extension.js","name":null,"original":{"line":48,"column":1},"generated":{"line":45,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":50,"column":0},"generated":{"line":46,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":65,"column":7},"generated":{"line":63,"column":0}},{"source":"../source/extension.js","name":"EXTN_PATTERNS_FOR_PARSING","original":{"line":65,"column":13},"generated":{"line":63,"column":4}},{"source":"../source/extension.js","name":"EXTN_PATTERNS_FOR_PARSING","original":{"line":65,"column":13},"generated":{"line":63,"column":29}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":65,"column":41},"generated":{"line":63,"column":32}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":65,"column":41},"generated":{"line":63,"column":56}},{"source":"../source/extension.js","name":null,"original":{"line":65,"column":66},"generated":{"line":63,"column":57}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":65,"column":41},"generated":{"line":63,"column":66}},{"source":"../source/extension.js","name":null,"original":{"line":65,"column":7},"generated":{"line":63,"column":67}},{"source":"../source/extension.js","name":null,"original":{"line":67,"column":7},"generated":{"line":65,"column":0}},{"source":"../source/extension.js","name":"EXTN_PATTERNS_FOR_MATCHING","original":{"line":67,"column":13},"generated":{"line":65,"column":4}},{"source":"../source/extension.js","name":"EXTN_PATTERNS_FOR_MATCHING","original":{"line":67,"column":13},"generated":{"line":65,"column":30}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":67,"column":42},"generated":{"line":65,"column":33}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":67,"column":42},"generated":{"line":65,"column":57}},{"source":"../source/extension.js","name":null,"original":{"line":67,"column":67},"generated":{"line":65,"column":58}},{"source":"../source/extension.js","name":"create_extension_pattern","original":{"line":67,"column":42},"generated":{"line":65,"column":68}},{"source":"../source/extension.js","name":null,"original":{"line":67,"column":7},"generated":{"line":65,"column":69}},{"source":"../source/extension.js","name":null,"original":{"line":69,"column":0},"generated":{"line":65,"column":71}},{"source":"../source/extension.js","name":null,"original":{"line":70,"column":0},"generated":{"line":66,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":0},"generated":{"line":69,"column":0}},{"source":"../source/extension.js","name":"EXTN_PATTERN","original":{"line":71,"column":6},"generated":{"line":69,"column":4}},{"source":"../source/extension.js","name":"EXTN_PATTERN","original":{"line":71,"column":6},"generated":{"line":69,"column":16}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":21},"generated":{"line":69,"column":19}},{"source":"../source/extension.js","name":"RegExp","original":{"line":71,"column":25},"generated":{"line":69,"column":23}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":21},"generated":{"line":69,"column":29}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":32},"generated":{"line":69,"column":30}},{"source":"../source/extension.js","name":"EXTN_PATTERNS_FOR_PARSING","original":{"line":71,"column":40},"generated":{"line":69,"column":38}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":32},"generated":{"line":69,"column":63}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":68},"generated":{"line":69,"column":66}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":21},"generated":{"line":69,"column":70}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":74},"generated":{"line":69,"column":72}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":21},"generated":{"line":69,"column":75}},{"source":"../source/extension.js","name":null,"original":{"line":71,"column":0},"generated":{"line":69,"column":76}},{"source":"../source/extension.js","name":null,"original":{"line":73,"column":0},"generated":{"line":69,"column":78}},{"source":"../source/extension.js","name":null,"original":{"line":74,"column":0},"generated":{"line":70,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":75,"column":0},"generated":{"line":71,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":76,"column":7},"generated":{"line":73,"column":0}},{"source":"../source/extension.js","name":"extractExtension","original":{"line":76,"column":16},"generated":{"line":73,"column":9}},{"source":"../source/extension.js","name":null,"original":{"line":76,"column":7},"generated":{"line":73,"column":25}},{"source":"../source/extension.js","name":"number","original":{"line":76,"column":33},"generated":{"line":73,"column":26}},{"source":"../source/extension.js","name":null,"original":{"line":76,"column":7},"generated":{"line":73,"column":32}},{"source":"../source/extension.js","name":null,"original":{"line":77,"column":0},"generated":{"line":73,"column":34}},{"source":"../source/extension.js","name":null,"original":{"line":78,"column":1},"generated":{"line":74,"column":0}},{"source":"../source/extension.js","name":"start","original":{"line":78,"column":7},"generated":{"line":74,"column":6}},{"source":"../source/extension.js","name":"start","original":{"line":78,"column":7},"generated":{"line":74,"column":11}},{"source":"../source/extension.js","name":"number","original":{"line":78,"column":15},"generated":{"line":74,"column":14}},{"source":"../source/extension.js","name":"number","original":{"line":78,"column":15},"generated":{"line":74,"column":20}},{"source":"../source/extension.js","name":"search","original":{"line":78,"column":22},"generated":{"line":74,"column":21}},{"source":"../source/extension.js","name":"number","original":{"line":78,"column":15},"generated":{"line":74,"column":27}},{"source":"../source/extension.js","name":"EXTN_PATTERN","original":{"line":78,"column":29},"generated":{"line":74,"column":28}},{"source":"../source/extension.js","name":"number","original":{"line":78,"column":15},"generated":{"line":74,"column":40}},{"source":"../source/extension.js","name":null,"original":{"line":78,"column":1},"generated":{"line":74,"column":41}},{"source":"../source/extension.js","name":null,"original":{"line":79,"column":1},"generated":{"line":76,"column":0}},{"source":"../source/extension.js","name":"start","original":{"line":79,"column":5},"generated":{"line":76,"column":6}},{"source":"../source/extension.js","name":"start","original":{"line":79,"column":5},"generated":{"line":76,"column":11}},{"source":"../source/extension.js","name":null,"original":{"line":79,"column":13},"generated":{"line":76,"column":14}},{"source":"../source/extension.js","name":null,"original":{"line":79,"column":1},"generated":{"line":76,"column":15}},{"source":"../source/extension.js","name":null,"original":{"line":79,"column":16},"generated":{"line":76,"column":17}},{"source":"../source/extension.js","name":null,"original":{"line":80,"column":2},"generated":{"line":77,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":80,"column":9},"generated":{"line":77,"column":11}},{"source":"../source/extension.js","name":null,"original":{"line":80,"column":2},"generated":{"line":77,"column":13}},{"source":"../source/extension.js","name":null,"original":{"line":81,"column":2},"generated":{"line":78,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":77,"column":0},"generated":{"line":78,"column":3}},{"source":"../source/extension.js","name":null,"original":{"line":83,"column":1},"generated":{"line":78,"column":4}},{"source":"../source/extension.js","name":null,"original":{"line":84,"column":1},"generated":{"line":79,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":85,"column":1},"generated":{"line":82,"column":0}},{"source":"../source/extension.js","name":"number_without_extension","original":{"line":85,"column":7},"generated":{"line":82,"column":6}},{"source":"../source/extension.js","name":"number_without_extension","original":{"line":85,"column":7},"generated":{"line":82,"column":30}},{"source":"../source/extension.js","name":"number","original":{"line":85,"column":34},"generated":{"line":82,"column":33}},{"source":"../source/extension.js","name":"number","original":{"line":85,"column":34},"generated":{"line":82,"column":39}},{"source":"../source/extension.js","name":"slice","original":{"line":85,"column":41},"generated":{"line":82,"column":40}},{"source":"../source/extension.js","name":"number","original":{"line":85,"column":34},"generated":{"line":82,"column":45}},{"source":"../source/extension.js","name":null,"original":{"line":85,"column":47},"generated":{"line":82,"column":46}},{"source":"../source/extension.js","name":"number","original":{"line":85,"column":34},"generated":{"line":82,"column":47}},{"source":"../source/extension.js","name":"start","original":{"line":85,"column":50},"generated":{"line":82,"column":49}},{"source":"../source/extension.js","name":"number","original":{"line":85,"column":34},"generated":{"line":82,"column":54}},{"source":"../source/extension.js","name":null,"original":{"line":85,"column":1},"generated":{"line":82,"column":55}},{"source":"../source/extension.js","name":null,"original":{"line":87,"column":1},"generated":{"line":83,"column":0}},{"source":"../source/extension.js","name":"matches","original":{"line":87,"column":7},"generated":{"line":83,"column":6}},{"source":"../source/extension.js","name":"matches","original":{"line":87,"column":7},"generated":{"line":83,"column":13}},{"source":"../source/extension.js","name":"number","original":{"line":87,"column":17},"generated":{"line":83,"column":16}},{"source":"../source/extension.js","name":"number","original":{"line":87,"column":17},"generated":{"line":83,"column":22}},{"source":"../source/extension.js","name":"match","original":{"line":87,"column":24},"generated":{"line":83,"column":23}},{"source":"../source/extension.js","name":"number","original":{"line":87,"column":17},"generated":{"line":83,"column":28}},{"source":"../source/extension.js","name":"EXTN_PATTERN","original":{"line":87,"column":30},"generated":{"line":83,"column":29}},{"source":"../source/extension.js","name":"number","original":{"line":87,"column":17},"generated":{"line":83,"column":41}},{"source":"../source/extension.js","name":null,"original":{"line":87,"column":1},"generated":{"line":83,"column":42}},{"source":"../source/extension.js","name":null,"original":{"line":88,"column":1},"generated":{"line":84,"column":0}},{"source":"../source/extension.js","name":"i","original":{"line":88,"column":5},"generated":{"line":84,"column":6}},{"source":"../source/extension.js","name":"i","original":{"line":88,"column":5},"generated":{"line":84,"column":7}},{"source":"../source/extension.js","name":null,"original":{"line":88,"column":9},"generated":{"line":84,"column":10}},{"source":"../source/extension.js","name":null,"original":{"line":88,"column":1},"generated":{"line":84,"column":11}},{"source":"../source/extension.js","name":null,"original":{"line":89,"column":1},"generated":{"line":86,"column":0}},{"source":"../source/extension.js","name":"i","original":{"line":89,"column":8},"generated":{"line":86,"column":9}},{"source":"../source/extension.js","name":"i","original":{"line":89,"column":8},"generated":{"line":86,"column":10}},{"source":"../source/extension.js","name":"matches","original":{"line":89,"column":12},"generated":{"line":86,"column":13}},{"source":"../source/extension.js","name":"matches","original":{"line":89,"column":12},"generated":{"line":86,"column":20}},{"source":"../source/extension.js","name":"length","original":{"line":89,"column":20},"generated":{"line":86,"column":21}},{"source":"../source/extension.js","name":null,"original":{"line":89,"column":1},"generated":{"line":86,"column":27}},{"source":"../source/extension.js","name":null,"original":{"line":90,"column":1},"generated":{"line":86,"column":29}},{"source":"../source/extension.js","name":null,"original":{"line":91,"column":2},"generated":{"line":87,"column":0}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":6},"generated":{"line":87,"column":8}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":6},"generated":{"line":87,"column":15}},{"source":"../source/extension.js","name":"i","original":{"line":91,"column":14},"generated":{"line":87,"column":16}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":6},"generated":{"line":87,"column":17}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":6},"generated":{"line":87,"column":18}},{"source":"../source/extension.js","name":null,"original":{"line":91,"column":20},"generated":{"line":87,"column":22}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":6},"generated":{"line":87,"column":26}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":28},"generated":{"line":87,"column":30}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":28},"generated":{"line":87,"column":37}},{"source":"../source/extension.js","name":"i","original":{"line":91,"column":36},"generated":{"line":87,"column":38}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":28},"generated":{"line":87,"column":39}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":28},"generated":{"line":87,"column":40}},{"source":"../source/extension.js","name":"length","original":{"line":91,"column":39},"generated":{"line":87,"column":41}},{"source":"../source/extension.js","name":"matches","original":{"line":91,"column":28},"generated":{"line":87,"column":47}},{"source":"../source/extension.js","name":null,"original":{"line":91,"column":48},"generated":{"line":87,"column":50}},{"source":"../source/extension.js","name":null,"original":{"line":91,"column":2},"generated":{"line":87,"column":51}},{"source":"../source/extension.js","name":null,"original":{"line":92,"column":2},"generated":{"line":87,"column":53}},{"source":"../source/extension.js","name":null,"original":{"line":93,"column":3},"generated":{"line":88,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":93,"column":10},"generated":{"line":88,"column":13}},{"source":"../source/extension.js","name":"number","original":{"line":94,"column":4},"generated":{"line":89,"column":0}},{"source":"../source/extension.js","name":"number","original":{"line":94,"column":4},"generated":{"line":89,"column":8}},{"source":"../source/extension.js","name":"number","original":{"line":94,"column":4},"generated":{"line":89,"column":14}},{"source":"../source/extension.js","name":"number_without_extension","original":{"line":94,"column":13},"generated":{"line":89,"column":16}},{"source":"../source/extension.js","name":null,"original":{"line":93,"column":10},"generated":{"line":89,"column":40}},{"source":"../source/extension.js","name":"ext","original":{"line":95,"column":4},"generated":{"line":90,"column":0}},{"source":"../source/extension.js","name":"ext","original":{"line":95,"column":4},"generated":{"line":90,"column":8}},{"source":"../source/extension.js","name":"ext","original":{"line":95,"column":4},"generated":{"line":90,"column":11}},{"source":"../source/extension.js","name":"matches","original":{"line":95,"column":13},"generated":{"line":90,"column":13}},{"source":"../source/extension.js","name":"matches","original":{"line":95,"column":13},"generated":{"line":90,"column":20}},{"source":"../source/extension.js","name":"i","original":{"line":95,"column":21},"generated":{"line":90,"column":21}},{"source":"../source/extension.js","name":"matches","original":{"line":95,"column":13},"generated":{"line":90,"column":22}},{"source":"../source/extension.js","name":null,"original":{"line":93,"column":10},"generated":{"line":91,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":93,"column":3},"generated":{"line":91,"column":7}},{"source":"../source/extension.js","name":null,"original":{"line":97,"column":3},"generated":{"line":92,"column":0}},{"source":"../source/extension.js","name":"i","original":{"line":98,"column":2},"generated":{"line":94,"column":0}},{"source":"../source/extension.js","name":"i","original":{"line":98,"column":2},"generated":{"line":94,"column":4}},{"source":"../source/extension.js","name":"i","original":{"line":98,"column":2},"generated":{"line":94,"column":5}},{"source":"../source/extension.js","name":null,"original":{"line":99,"column":2},"generated":{"line":95,"column":0}},{"source":"../source/extension.js","name":null,"original":{"line":100,"column":1},"generated":{"line":96,"column":0}}],"sources":{"../source/extension.js":"import { VALID_DIGITS } from './constants'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n// Pattern to capture digits used in an extension.\r\n// Places a maximum length of '7' for an extension.\r\nconst CAPTURING_EXTN_DIGITS = '([' + VALID_DIGITS + ']{1,7})'\r\n\r\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\r\nfunction create_extension_pattern(purpose)\r\n{\r\n\t// One-character symbols that can be used to indicate an extension.\r\n\tlet single_extension_characters = 'x\\uFF58#\\uFF03~\\uFF5E'\r\n\r\n\tswitch (purpose)\r\n\t{\r\n\t\t// For parsing, we are slightly more lenient in our interpretation than for matching. Here we\r\n\t\t// allow \"comma\" and \"semicolon\" as possible extension indicators. When matching, these are\r\n\t\tcase 'parsing':\r\n\t\t\tsingle_extension_characters = ',;' + single_extension_characters\r\n\t}\r\n\r\n\treturn RFC3966_EXTN_PREFIX +\r\n\t\tCAPTURING_EXTN_DIGITS + '|' +\r\n\t\t'[ \\u00A0\\\\t,]*' +\r\n\t\t'(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|' +\r\n\t\t// \"доб.\"\r\n\t\t'\\u0434\\u043E\\u0431|' +\r\n\t\t'[' + single_extension_characters + ']|int|anexo|\\uFF49\\uFF4E\\uFF54)' +\r\n\t\t'[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*' +\r\n\t\tCAPTURING_EXTN_DIGITS + '#?|' +\r\n\t\t'[- ]+([' + VALID_DIGITS + ']{1,5})#'\r\n}\r\n\r\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\r\nexport const EXTN_PATTERNS_FOR_PARSING = create_extension_pattern('parsing')\r\n\r\nexport const EXTN_PATTERNS_FOR_MATCHING = create_extension_pattern('matching')\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + EXTN_PATTERNS_FOR_PARSING + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport function extractExtension(number)\r\n{\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst number_without_extension = number.slice(0, start)\r\n\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length)\r\n\t{\r\n\t\tif (matches[i] != null && matches[i].length > 0)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tnumber : number_without_extension,\r\n\t\t\t\text    : matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}"},"lineCount":null}},"error":null,"hash":"b27ff21f23f8b583a2b9904de377223f","cacheData":{"env":{}}}