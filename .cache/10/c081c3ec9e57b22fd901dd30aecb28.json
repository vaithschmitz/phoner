{"id":"node_modules/libphonenumber-js/es6/isPossibleNumber.js","dependencies":[{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/isPossibleNumber.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/vaithschmitz/Desktop/phoner/package.json","includedInParent":true,"mtime":1576488072191},{"name":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/package.json","includedInParent":true,"mtime":1576491938077},{"name":"./getNumberType","loc":{"line":1,"column":35},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/isPossibleNumber.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/getNumberType.js"},{"name":"./isPossibleNumber_","loc":{"line":2,"column":30},"parent":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/isPossibleNumber.js","resolved":"/Users/vaithschmitz/Desktop/phoner/node_modules/libphonenumber-js/es6/isPossibleNumber_.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPossibleNumber;\n\nvar _getNumberType = require(\"./getNumberType\");\n\nvar _isPossibleNumber_ = _interopRequireDefault(require(\"./isPossibleNumber_\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\nfunction isPossibleNumber() {\n  var _normalizeArguments = (0, _getNumberType.normalizeArguments)(arguments),\n      input = _normalizeArguments.input,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return (0, _isPossibleNumber_.default)(input, options, metadata);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":0}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":18,"column":15},"generated":{"line":28,"column":0}},{"source":"../source/isPossibleNumber.js","name":"isPossibleNumber","original":{"line":18,"column":24},"generated":{"line":28,"column":9}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":18,"column":15},"generated":{"line":28,"column":25}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":28,"column":28}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":0}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":6}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":25}},{"source":"../source/isPossibleNumber.js","name":"normalizeArguments","original":{"line":20,"column":38},"generated":{"line":29,"column":28}},{"source":"../source/isPossibleNumber.js","name":"arguments","original":{"line":20,"column":57},"generated":{"line":29,"column":67}},{"source":"../source/isPossibleNumber.js","name":"normalizeArguments","original":{"line":20,"column":38},"generated":{"line":29,"column":76}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":29,"column":77}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":30,"column":0}},{"source":"../source/isPossibleNumber.js","name":"input","original":{"line":20,"column":9},"generated":{"line":30,"column":6}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":30,"column":11}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":30,"column":14}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":30,"column":33}},{"source":"../source/isPossibleNumber.js","name":"input","original":{"line":20,"column":9},"generated":{"line":30,"column":34}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":30,"column":39}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":31,"column":0}},{"source":"../source/isPossibleNumber.js","name":"options","original":{"line":20,"column":16},"generated":{"line":31,"column":6}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":31,"column":13}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":31,"column":16}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":31,"column":35}},{"source":"../source/isPossibleNumber.js","name":"options","original":{"line":20,"column":16},"generated":{"line":31,"column":36}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":31,"column":43}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":32,"column":0}},{"source":"../source/isPossibleNumber.js","name":"metadata","original":{"line":20,"column":25},"generated":{"line":32,"column":6}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":32,"column":14}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":32,"column":17}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":32,"column":36}},{"source":"../source/isPossibleNumber.js","name":"metadata","original":{"line":20,"column":25},"generated":{"line":32,"column":37}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":19,"column":0},"generated":{"line":32,"column":45}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":21,"column":1},"generated":{"line":34,"column":0}},{"source":"../source/isPossibleNumber.js","name":"_isPossibleNumber","original":{"line":21,"column":8},"generated":{"line":34,"column":9}},{"source":"../source/isPossibleNumber.js","name":"input","original":{"line":21,"column":26},"generated":{"line":34,"column":41}},{"source":"../source/isPossibleNumber.js","name":"_isPossibleNumber","original":{"line":21,"column":8},"generated":{"line":34,"column":46}},{"source":"../source/isPossibleNumber.js","name":"options","original":{"line":21,"column":33},"generated":{"line":34,"column":48}},{"source":"../source/isPossibleNumber.js","name":"_isPossibleNumber","original":{"line":21,"column":8},"generated":{"line":34,"column":55}},{"source":"../source/isPossibleNumber.js","name":"metadata","original":{"line":21,"column":42},"generated":{"line":34,"column":57}},{"source":"../source/isPossibleNumber.js","name":"_isPossibleNumber","original":{"line":21,"column":8},"generated":{"line":34,"column":65}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":21,"column":1},"generated":{"line":34,"column":66}},{"source":"../source/isPossibleNumber.js","name":null,"original":{"line":22,"column":1},"generated":{"line":35,"column":0}}],"sources":{"../source/isPossibleNumber.js":"import { normalizeArguments } from './getNumberType'\r\nimport _isPossibleNumber from './isPossibleNumber_'\r\n\r\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isPossibleNumber()\r\n{\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\treturn _isPossibleNumber(input, options, metadata)\r\n}"},"lineCount":null}},"error":null,"hash":"d7e10c3ecb04c9eb9017275560c6fdaf","cacheData":{"env":{}}}